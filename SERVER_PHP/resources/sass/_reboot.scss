*,
:after,
:before {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  padding: 0; 
}
body {
  font-family: $font-family-base;
  font-size: $font-size-base;
  font-weight: 400;
  color: $body-color;
  background-color: $body-bg;
  line-height: $line-height-base;
  text-align: left;
}
%tag-default {
  border: 0;
  font-family: inherit;
  font-size: 100%;
  font-style: inherit;
  font-weight: inherit;
  margin: 0;
  outline: 0;
  padding: 0;
  vertical-align: baseline;
}

:focus {
  outline: 0 !important;
  text-decoration: none !important;
}

ol,
ul {
  list-style: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
}

caption,
th,
td {
  text-align: left;
  padding: 5px 10px;
}

img {
  border: none;
  max-width: 100%;
  height: auto;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main,
time {
  display: block;
}

// Typography
//
// 1. Remove top margins from headings
//    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
//    margin for easier control within type scales as it avoids margin collapsing.

%heading {
  margin-top: 0; // 1
  margin-bottom: 0;
}

h1 {
  @extend %heading;
  font-size: $h1-font-size;
}

h2 {
  @extend %heading;
  font-size: $h2-font-size;
}

h3 {
  @extend %heading;
  font-size: $h3-font-size;
}

h4 {
  @extend %heading;
  font-size: $h4-font-size;
}

h5 {
  @extend %heading;
  font-size: $h5-font-size;
}

h6 {
  @extend %heading;
  font-size: $h6-font-size;
}

// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.

p {
  margin-top: 0;
  margin-bottom: 0;
}

// Links

a {
  color: $link-color;
  text-decoration: $link-decoration;

  &:hover,
  &:active {
    background-color: transparent;
    color: $link-hover-color;
    text-decoration: none;
  }
  &:not([href]) {
    &,
    &:hover {
      color: inherit;
      text-decoration: none;
    }
  }
}

// Images and content
img {
  vertical-align: middle;
  border: none;
  max-width: 100%;
  height: auto;
  line-height: 1;
}

.table {
  width: 100%;
  margin-bottom: 1rem;
  color: #212529;
}

table {
  border-collapse: collapse;
}

.table-responsive {
  display: block;
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

.table thead th {
  vertical-align: bottom;
  border-bottom: 2px solid #dee2e6;
}

.table td,
.table th {
  padding: 0.75rem;
  vertical-align: top;
  border-bottom: 1px solid #dee2e6;
}

.table-hover tbody tr:hover {
  color: #212529;
  background-color: rgba(0, 0, 0, 0.075);
}

/*page ----------------------------------------------------*/

.line-height-0 {
  line-height: 0;
}

.float-left {
  float: left !important;
}

.float-right {
  float: right !important;
}

.float-none {
  float: none !important;
}

.mobile {
  display: none;

  @include Responsive(SM) {
    display: unset;
  }
}

/* Clearfix -----------------------------------------*/

.clear {
  zoom: 1;
}

.clear:after {
  clear: both;
  content: ".";
  display: block;
  height: 0;
  line-height: 0;
  visibility: hidden;
  overflow: hidden;
}

.overflow-hidden {
  overflow: hidden;
}

/** * display */

.d-none {
  display: none !important;
}

.d-inline {
  display: inline !important;
}

.d-inline-block {
  display: inline-block !important;
}

.d-block {
  display: block !important;
}

.d-table {
  display: table !important;
}

.d-table-row {
  display: table-row !important;
}

.d-table-cell {
  display: table-cell !important;
}

.d-flex {
  display: -ms-flexbox !important;
  display: flex !important;
}

.d-inline-flex {
  display: -ms-inline-flexbox !important;
  display: inline-flex !important;
}

.position-relative {
  position: relative;
}

.italic {
  font-style: italic !important;
}

.not-italic {
  font-style: normal !important;
}

.uppercase {
  text-transform: uppercase !important;
}

.lowercase {
  text-transform: lowercase !important;
}

.capitalize {
  text-transform: capitalize !important;
}

.normal-case {
  text-transform: none !important;
}

.underline {
  text-decoration: underline !important;
}

.line-through {
  text-decoration: line-through !important;
}

.no-underline {
  text-decoration: none !important;
}

/**************************************************/

.font-hairline {
  font-weight: 100 !important;
}

.font-thin {
  font-weight: 200 !important;
}

.font-light {
  font-weight: 300 !important;
}

.font-normal {
  font-weight: 400 !important;
}

.font-medium {
  font-weight: 500 !important;
}

.font-semibold {
  font-weight: 600 !important;
}

.font-bold {
  font-weight: 700 !important;
}

.font-extrabold {
  font-weight: 800 !important;
}

.font-black {
  font-weight: 900 !important;
}
//// text aline
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-left {
  text-align: left;
}

//// margin AUTO
.vertical-align-middle {
  vertical-align: middle;
}
.mg-auto {
  margin-left: auto;
  margin-right: auto;
}

.rounded-circle {
  border-radius: 50% !important;
}

.border {
  border: 1px solid #dee2e6 !important;
}
.border-top {
  border-top: 1px solid #dee2e6 !important;
}
.border-right {
  border-right: 1px solid #dee2e6 !important;
}
.border-bottom {
  border-bottom: 1px solid #dee2e6 !important;
}
.border-left {
  border-left: 1px solid #dee2e6 !important;
}

@each $name, $color in $custom-colors {
  .text-color-#{"" + $name} {
    color: $color;
  }
}
@each $name, $color in $custom-colors {
  .border-color-#{"" + $name} {
    border-color: $color;
  }
}
@each $name, $color in $custom-colors {
  .bg-color-#{"" + $name} {
    background-color: $color;
  }
}

@each $width in $custom-width {
  .w-#{$width} {
    width: #{$width + "%"};
  }
}

@each $name, $font-size in $custom-font-size {
  .text-#{"" + $name} {
    font-size: $font-size;
  }
}
@each $name, $font-size in $custom-font-size {
  .itext-#{"" + $name} {
    font-size: $font-size !important;
  }
}

body.neo-scroll {
  overflow: hidden;
}

input,
select,
textarea,
option {
  &:focus {
    border: 1px solid #aaaaaa;
    outline: none;
  }
}

.hidden-mobile {
  display: initial;
  @include Responsive(SM) {
    display: none;
  }
}
.hidden-small-mobile {
  display: initial;
  @include Responsive(XS) {
    display: none;
  }
}

/// tạo 1 respone hidden
$hidden_screens: (XSM, XS, SM, MD, LG, XL, XXL) !default;
.hidden-small-mobile {
  display: initial;
  @include Responsive(XS) {
    display: none;
  }
}
@each $name in $hidden_screens {
  //// cái này là để màn hình mobile thì hiện, còn màn hình pc thì tắt
  .hidden-hero-increment-#{to-lower-case(#{$name})} {
    display: initial;
    @include Screen($name) {
      display: none;
    }
  }
  //// cái này là để màn hình mobile thì tắt, còn màn hình pc thì hiện
  .hidden-hero-decrement-#{to-lower-case(#{$name})} {
    display: none;
    @include Screen($name) {
      display: initial;
    }
  }
  //// cái này là để màn hình mobile thì hiện, còn màn hình pc thì tắt
  .ihidden-hero-increment-#{to-lower-case(#{$name})} {
    display: initial !important;
    @include Screen($name) {
      display: none !important;
    }
  }
  //// cái này là để màn hình mobile thì hiện, còn màn hình pc thì tắt dùng screen max ( là tính cho mobile ) không imposrtant
  .max-hidden-hero-increment-#{to-lower-case(#{$name})} {
    display: none;
    @include ScreenMax($name) {
      display: initial;
    }
  }
  //// cái này là để màn hình mobile thì hiện, còn màn hình pc thì tắt dùng screen max ( là tính cho mobile )
  .imax-hidden-hero-increment-#{to-lower-case(#{$name})} {
    display: none !important;
    @include ScreenMax($name) {
      display: initial !important;
    }
  }
  //// cái này là để màn hình mobile thì tắt, còn màn hình pc thì hiện
  .ihidden-hero-decrement-#{to-lower-case(#{$name})} {
    display: none !important;
    @include Screen($name) {
      display: initial !important;
    }
  }
  .col-reset-px-0-#{to-lower-case(#{$name})} {
    padding-left: 0;
    padding-right: 0;
    @include Screen($name) {
      padding-left: 15px;
      padding-right: 15px;
    }
  }
}

.pc {
  display: block;
  @include Responsive(SM) {
    display: none;
  }
}

/** shadows depth ****************************************/

.shadows-0 {
  box-shadow: none !important;
}

.shadows-1 {
  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12) !important;
}

.shadows-1-half {
  box-shadow: 0 5px 11px 0 rgba(0, 0, 0, 0.18), 0 4px 15px 0 rgba(0, 0, 0, 0.15) !important;
}

.shadows-2 {
  box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19) !important;
}

.shadows-3 {
  box-shadow: 0 12px 15px 0 rgba(0, 0, 0, 0.24), 0 17px 50px 0 rgba(0, 0, 0, 0.19) !important;
}

.shadows-4 {
  box-shadow: 0 16px 28px 0 rgba(0, 0, 0, 0.22), 0 25px 55px 0 rgba(0, 0, 0, 0.21) !important;
}

.shadows-5 {
  box-shadow: 0 27px 24px 0 rgba(0, 0, 0, 0.2), 0 40px 77px 0 rgba(0, 0, 0, 0.22) !important;
}

/**********************************************************/

/**********************************************************/

$box-models: (
  0: 0,
  1: 0.25rem,
  2: 0.5rem,
  3: 1rem,
  4: 1.5rem,
  5: 3rem,
  n10px: -10px,
  ///negative
  10px: 10px,
  5px: 5px,
) !default;


@each $key, $value in $box-models {
  .pl-#{$key} {
    padding-left: $value !important;
  }
}
@each $key, $value in $box-models {
  .pr-#{$key} {
    padding-right: $value !important;
  }
}
@each $key, $value in $box-models {
  .px-#{$key} {
    padding-left: $value !important;
    padding-right: $value !important;
  }
}
@each $key, $value in $box-models {
  .pt-#{$key} {
    padding-top: $value !important;
  }
}
@each $key, $value in $box-models {
  .pb-#{$key} {
    padding-bottom: $value !important;
  }
}
@each $key, $value in $box-models {
  .py-#{$key} {
    padding-top: $value !important;
    padding-bottom: $value !important;
  }
}
/// margin
@each $key, $value in $box-models {
  .ml-#{$key} {
    margin-left: $value !important;
  }
}
@each $key, $value in $box-models {
  .mr-#{$key} {
    margin-right: $value !important;
  }
}
@each $key, $value in $box-models {
  .mx-#{$key} {
    margin-left: $value !important;
    margin-right: $value !important;
  }
}
@each $key, $value in $box-models {
  .mt-#{$key} {
    margin-top: $value !important;
  }
}
@each $key, $value in $box-models {
  .mb-#{$key} {
    margin-bottom: $value !important;
  }
}
@each $key, $value in $box-models {
  .my-#{$key} {
    margin-top: $value !important;
    margin-bottom: $value !important;
  }
}


.title-hr {
  background: url(/images/background/bg_title.png) center bottom no-repeat;
  color: #142149;
  display: block;
  font-family: RCB;
  font-size: 25px;
  padding: 40px 30px 15px;
  text-align: center;
  text-transform: uppercase;
}
.wrap-break-word {
  overflow-wrap: break-word !important;
}
